# Backend environment variables example for Smart Campus
# Copy this to ".env" and edit values before running the backend locally.

# --- Server ---
PORT=5000
SESSION_KEY=your_session_secret_here
FRONTEND_ORIGIN=http://localhost:5173
GOOGLE_CLIENT_ID=your_google_client_id_here

# --- Preferred: single MONGO_URI (SRV) ---
# Use this if DNS SRV lookups work in your environment. Ensure password has special
# characters URL-encoded (e.g. @ -> %40)
# Example:
# MONGO_URI=mongodb+srv://Arjun:Arjun%402006@cluster0.bx9is7t.mongodb.net/smart_campus?retryWrites=true&w=majority

# --- Alternative: Build non-SRV MongoDB URI from components ---
# If your environment has intermittent SRV/DNS failures, set MONGO_FORCE_NON_SRV=true
# and provide the comma-separated shard hosts (host:port). The server will build a
# non-SRV connection string automatically from these values.
MONGO_FORCE_NON_SRV=false
# comma-separated list of host:port entries (no spaces)
# Example (replace with your cluster hosts):
# MONGO_HOSTS=ac-bb4nhzt-shard-00-00.bx9is7t.mongodb.net:27017,ac-bb4nhzt-shard-00-01.bx9is7t.mongodb.net:27017,ac-bb4nhzt-shard-00-02.bx9is7t.mongodb.net:27017
MONGO_HOSTS=

# When building non-SRV URIs the server will URL-encode MONGO_USER and MONGO_PASS
MONGO_USER=
MONGO_PASS=
MONGO_DB=smart_campus

# --- Fallbacks and retry behavior ---
# If true, server will try a local MongoDB at mongodb://localhost:27017 if Atlas is unreachable
MONGO_FALLBACK_LOCAL=false

# Retry configuration (used by connectWithRetry)
# Number of connection attempts before giving up (server will still continue trying in background)
MONGO_CONNECT_RETRIES=10
# Base wait (ms) between retries; exponential backoff is applied
MONGO_RETRY_INTERVAL_MS=1000

# --- Notes & troubleshooting ---
# 1) Always URL-encode special characters in passwords if you construct a single MONGO_URI directly.
#    Example: password 'Arjun@2006' -> 'Arjun%402006'
# 2) If you keep seeing SRV/DNS errors like querySrv ECONNREFUSED/ETIMEOUT, try setting
#    MONGO_FORCE_NON_SRV=true and filling MONGO_HOSTS with your cluster's host:port list.
# 3) Make sure your current public IP is added to MongoDB Atlas Network Access (or add 0.0.0.0/0 for testing).
# 4) To test connectivity quickly from PowerShell:
#    nslookup -type=SRV _mongodb._tcp.cluster0.bx9is7t.mongodb.net
#    Test-NetConnection -ComputerName ac-bb4nhzt-shard-00-00.bx9is7t.mongodb.net -Port 27017
#    node .\test-mongo.js
# 5) PowerShell example to set env vars for current session and run dev server:
#    $env:MONGO_FORCE_NON_SRV = 'true';
#    $env:MONGO_HOSTS = 'ac-bb4nhzt-shard-00-00.bx9is7t.mongodb.net:27017,ac-bb4nhzt-shard-00-01.bx9is7t.mongodb.net:27017,ac-bb4nhzt-shard-00-02.bx9is7t.mongodb.net:27017';
#    $env:MONGO_USER = 'Arjun';
#    $env:MONGO_PASS = 'Arjun%402006';
#    npm run dev
#
# 6) Frontend (Vite) troubleshooting: If `npm install` fails with EPERM or file-lock errors,
#    OneDrive may be interfering. Close any editors or OneDrive sync for this folder, or
#    move the repository outside OneDrive before running `npm ci` in the frontend/ folder.
#    After dependencies install, run `npm run dev` inside the frontend folder.
